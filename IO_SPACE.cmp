-- Copyright (C) 1991-2014 Altera Corporation. All rights reserved.
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, the Altera Quartus II License Agreement,
-- the Altera MegaCore Function License Agreement, or other 
-- applicable license agreement, including, without limitation, 
-- that your use is for the sole purpose of programming logic 
-- devices manufactured by Altera and sold by Altera or its 
-- authorized distributors.  Please refer to the applicable 
-- agreement for further details.


-- Generated by Quartus II 64-Bit Version 14.1 (Build Build 186 12/03/2014)
-- Created on Wed Apr 18 12:58:42 2018

COMPONENT IO_SPACE
	GENERIC ( BUS_WIDTH : INTEGER := 8; ENC_WIDTH : INTEGER := 32; FAN_WIDTH : INTEGER := 32; CPLD_VERSION : STD_LOGIC_VECTOR(7 DOWNTO 0) := b"00001101" );
		
	PORT
	(
		nRESET		:	 IN STD_LOGIC;
		Clk		:	 IN STD_LOGIC;
		IO_ADDR		:	 IN STD_LOGIC_VECTOR(bus_width-1 DOWNTO 0);
		IO_RDY_WR		:	 IN STD_LOGIC;
		IO_DAT_WR		:	 IN STD_LOGIC_VECTOR(bus_width-1 DOWNTO 0);
		IO_RDY_RD		:	 IN STD_LOGIC;
		IO_DAT_RD		:	 OUT STD_LOGIC_VECTOR(bus_width-1 DOWNTO 0);
		iPin7_0		:	 IN STD_LOGIC_VECTOR(2 DOWNTO 0);
		iPin15_8		:	 IN STD_LOGIC_VECTOR(5 DOWNTO 0);
		iPin23_16		:	 IN STD_LOGIC_VECTOR(bus_width-1 DOWNTO 0);
		oPin7_0		:	 OUT STD_LOGIC_VECTOR(bus_width-1 DOWNTO 0);
		oPin15_8		:	 OUT STD_LOGIC_VECTOR(bus_width-1 DOWNTO 0);
		oPin23_16		:	 OUT STD_LOGIC;
		DIP_SW		:	 IN STD_LOGIC_VECTOR(3 DOWNTO 0);
		Wr_MT1		:	 OUT STD_LOGIC;
		WrVal_MT1		:	 OUT STD_LOGIC_VECTOR(enc_width-1 DOWNTO 0);
		Enc_MT1		:	 IN STD_LOGIC_VECTOR(enc_width-1 DOWNTO 0);
		Wr_MT2		:	 OUT STD_LOGIC;
		WrVal_MT2		:	 OUT STD_LOGIC_VECTOR(enc_width-1 DOWNTO 0);
		Enc_MT2		:	 IN STD_LOGIC_VECTOR(enc_width-1 DOWNTO 0);
		Seg_LED		:	 OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
		Seg_DP		:	 IN STD_LOGIC;
		Wr_timer		:	 OUT STD_LOGIC;
		H_timer		:	 OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
		R_timer		:	 IN STD_LOGIC_VECTOR(7 DOWNTO 0);
		Trigger_Reset		:	 OUT STD_LOGIC;
		Pizza_Cali		:	 OUT STD_LOGIC;
		Wr_PWM		:	 OUT STD_LOGIC;
		PWM_ONOFF		:	 OUT STD_LOGIC;
		PWM_Duty		:	 OUT STD_LOGIC_VECTOR(13 DOWNTO 0);
		PWM_Frq		:	 OUT STD_LOGIC_VECTOR(13 DOWNTO 0)
	);
END COMPONENT;